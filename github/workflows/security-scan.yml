name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Lunes a las 2 AM

jobs:
  dependabot-security:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install safety bandit

      - name: Install Node dependencies
        run: npm ci

      - name: Run Python security scan with Safety
        run: safety check --json --output safety-report.json || true

      - name: Run Python security scan with Bandit
        run: bandit -r src/ -f json -o bandit-report.json || true

      - name: Run Node.js security audit
        run: npm audit --json > npm-audit-report.json || true

      - name: Run Snyk security scan
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --json-file-output=snyk-report.json
        continue-on-error: true

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-reports
          path: |
            safety-report.json
            bandit-report.json
            npm-audit-report.json
            snyk-report.json

  terraform-security:
    name: Terraform Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: |
          cd infra
          terraform init

      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: infra/
          format: json
          soft_fail: true

      - name: Run Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          output_format: json
          soft_fail: true

  container-security:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: false  # Deshabilitar hasta tener contenedores
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'python:3.9-slim'
          format: 'json'
          output: 'trivy-report.json'
